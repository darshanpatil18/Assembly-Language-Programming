ASSUME CS: CODE DS: DATA
DATA SEGMENT
 ARR DW 1234H, 1238H, 1236H, 1237H, 1234H ; INITIALIZE THE ARRAY
LARGEST DW 01H DUP(?) ; INITIALIZE LARGEST NUMBER
SIZE EQU 05D ; INITIALIZE SIZE OF ARR
DATA ENDS
CODE SEGMENT
 START:
 MOV AX, DATA ; LOAD DATA SEGMENT
 MOV DS, AX

 MOV CX, SIZE ; STORE SIZE IN COUNTER REGISTER
 MOV SI, OFFSET ARR ; STORE STARTING ADD OF ARR
 MOV AX, [SI] ; STORE FIRST ELEMENT OF ARR
AGAIN:
 MOV BX, [SI + 2] ; STORE NEXT ELEMENT
 CMP AX, BX ; COMPARE 2 ELEMENTS
 JNC SKIP ; IF CARRY = 1 JUMP (AX IS ALREADY LARGER)
 MOV AX, [SI + 2] ; UPDATE LARGEST
 SKIP:
 ADD SI, 02H ; INCREMENT SI
 DEC CX ; DECREMENT COUNTER
 JNZ AGAIN ; LOOP UNTIL TILL SIZE IS 0
 MOV SI, OFFSET LARGEST
 MOV [SI], AX ; STORE AX IN LARGEST VARIABLE

MOV AH, 4CH ; INTERRUPT TO TERMINATE
INT 21H
CODE ENDS
END START